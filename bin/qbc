#!/bin/bash
export QB_version="1.5"
export BASH_ENV=$(dirname $(realpath "$0"))"/../lib/qbc/qbcfunctions"
if [ ! -f "$BASH_ENV" ]
    then
      >&2 echo 'The program is not installed'
      exit 1
fi
#Usage: qbc ([-k | -c CERTFILE]) [-l USERNAME] [-p PASSWORD] URL <bash options>
{ [ "$1" == "-h" ] || [ "$1" == "--help" ]; } && { echo 'A qBittorent WebUI bash client'; echo; echo 'Usage: qbc [(-k | -c CERTFILE)] [-l USERNAME] [-p PASSWORD] URL [BASH_OPT1] [BASH_OPT2] ...'; exit 0; }
{ [ "$1" == "-v" ] || [ "$1" == "--version" ]; } && { echo "$QB_version" ; exit 0; }
if [ "$1" == "-k" ]
    then
     QB_arg1="-k"
     QB_arg2=""
     shift
    else
     if [ "$1" == "-c" ]
        then
         QB_arg1="--cacert"
         QB_arg2=$(realpath "$2")
         shift
         shift
        else
         QB_arg1=""
         QB_arg2=""
     fi
fi
export QB_arg1
export QB_arg2
if [ "$1" == "-l" ]
    then
     QB_login="$2"
     shift
     shift
    else
     QB_login=""
fi
export QB_login
if [ "$1" == "-p" ]
    then
     if [ "$2" == "-" ]
        then
         read -rs -p "Password for $QB_login: " QB_password
         exitcode="$?"
         [ "$exitcode" == "0" ] || exit "$exitcode"
         echo
        else
         QB_password="$2"
     fi
     shift
     shift
    else
     QB_password=""
fi
export QB_password
if [ -z "$1" ]
    then
     >&2 echo 'A qBittorent WebUI bash client'
     >&2 echo
     >&2 echo 'Usage: qbc [(-k | -c CERTFILE)] [-l USERNAME] [-p PASSWORD] URL [BASH_OPT1] [BASH_OPT2] ...'
     exit 127
fi
export QB_url="$1"
shift
/bin/bash "$@" --rcfile "$BASH_ENV" "$@"
exitcode="$?"
exit "$exitcode"
