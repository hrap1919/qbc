#!/bin/bash
#Usage: qbclient ([-k | -c CERTFILE]) [-l USERNAME] [-p PASSWORD] URL <bash options>
{ [ "$1" == "-h" ] || [ "$1" == "--help" ]; } && shift
if [ "$1" == "-k" ]
    then
     QBarg1="-k"
     QBarg2=""
     shift
    else
     if [ "$1" == "-c" ]
        then
         QBarg1="--cacert"
         QBarg2="$2"
         shift
         shift
        else
         QBarg1=""
         QBarg2=""
     fi
fi
if [ "$1" == "-l" ]
    then
     login="$2"
     shift
     shift
    else
     login="admin"
fi
if [ "$1" == "-p" ]
    then
     password="$2"
     shift
     shift
    else
     password=""
fi
if [ -z "$1" ]
    then
     >&2 echo 'Usage: qbclient [(-k | -c CERTFILE)] [-l USERNAME] [-p PASSWORD] URL [BASH_OPT1] [BASH_OPT2] ...'
     exit 127
fi
if [ -z "$password" ]
    then
     read -rs -p "Password for $login: " password
     echo
fi
password=$(echo "$password" | jq  -rR @uri)
login=$(echo "$login" | jq  -rR @uri)
#echo curl $QBarg1 $QBarg2 -i --header "Referer: $1" --data "username=$login&password=$password" "$1/api/v2/auth/login"
IFS=";"; read exitcode QBcookie <<<$(exitcode="";curl $QBarg1 $QBarg2 -i --header "Referer: $1" --data "username=$login&password=$password" "$1/api/v2/auth/login" 2>/dev/null |
(IFS=" "; while read line1 line2 line3; do [ -z $exitcode ] && { exitcode=$line2; printf "$line2;"; }; [ $line1 == "set-cookie:" ] && printf $line2; done))
#$(curl $QBarg1 $QBarg2 -c - --header "Referer: $1" --data "username=$login&password=$password" "$1/api/v2/auth/login" 2>/dev/null | cut -sf7)
if [ -z "$QBcookie" ]
    then
     if [ "$exitcode" == 200 ]
        then
         >&2 echo "Fail. Invalid username/password"
         exit 126
        else
         if [ "$exitcode" == 403 ]
            then
             >&2 echo "Fail. Your IP is banned"
             exit 126
            else
             >&2 echo "Fail. Check URL and/or SSL certificate"
             exit 1
         fi
     fi
fi
function exit ()
{
if [ -z "$QBurl" ]
    then
     exitcode=0
    else
     local exitcode=$(curl $QBarg1 $QBarg2 -s -o /dev/null -w "%{http_code}" --cookie $QBcookie "${QBurl}/api/v2/auth/logout" 2>/dev/null)
     if [ "$exitcode" == 200 ]
        then
         >&2 echo Logged out
         exitcode=0
        else
         >&2 echo 'Warning. Logout with the following cookie did not succeed:'
         >&2 echo "$QBcookie"
         exitcode=1
    fi
fi
[ -z "$1" ] || exitcode="$1"
builtin exit "$exitcode"
}
. $(dirname "$0")"/../lib/qbclient/qbfunctions"
declare -fx exit
declare -fx qblogin
declare -fx qblogout
declare -fx qbaddurl
declare -fx qbaddfile
declare -fx qbaddpaused
declare -fx qbprefget
declare -fx qbprefset
declare -fx qbpasswd
declare -fx qbinfo
declare -fx qbselect
declare -fx qbdel
declare -fx qbtorinfo
declare -fx qbtorprop
declare -fx qbtrackers
declare -fx qbcommand
declare -fx qbmedia
declare -fx qbsetlocation
declare -fx qbpeers
declare -fx qbcontent
declare -fx qbfileinfo
declare -fx qbfileprio

export QBcookie
export QBarg1
export QBarg2
#="SID=$QBcookie"
export QBurl="$1"
shift
HISTFILE="$HOME/.qbclient_history" PROMPT_COMMAND='PS1=\$QBurl"/"\${QBhash:0:5}"> ";unset PROMPT_COMMAND' /bin/bash "$@"
#We do not know if the redefined exit has been already invoked
curl $QBarg1 $QBarg2 -s --cookie $QBcookie "${QBurl}/api/v2/auth/logout" &>/dev/null
builtin exit 0
